<html>
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="IFTTT + 即刻">
  <!-- Schema.org for Google -->
  <meta itemprop="name" content="IFTTJ">
  <meta itemprop="description" content="IFTTT + 即刻">
  <!-- Twitter -->
  <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="IFTTJ">
  <meta name="twitter:description" content="IFTTT + 即刻">
  <meta name="twitter:site" content="@wonderfuly">
  <meta name="twitter:creator" content="@wonderfuly">
  <!-- Open Graph general (Facebook, Pinterest & Google+) -->
  <meta name="og:title" content="IFTTJ">
  <meta name="og:description" content="IFTTT + 即刻">
  <meta name="og:url" content="http://ifttj.wong2.me">
  <meta name="og:site_name" content="IFTTJ">
  <meta name="og:locale" content="zh_CN">
  <meta name="og:type" content="website">
  <link rel="stylesheet" href="/static/yue.css" />
  <title>IFTTJ</title>
  <style>
    body {
      margin: 0;
      padding: 0.4em 1em 6em;
      background: #fff;
    }
    .yue {
      max-width: 650px;
      margin: 0 auto;
    }
    .logo span {
      color: #ffd200;
    }
    strong.thisthat {
      color: #09f;
    }
  </style>
</head>
<body>
  <div class="yue">
    <h1 class="logo">IFTT<span>Jike</span></h1>
    <blockquote>
      <p>连接 <a href="https://ifttt.com/" target="_blank">IFTTT </a>和 <a href="http://ruguoapp.com/" target="_blank">即刻</a></p>
    </blockquote>
    <h2>原理</h2>
    <p>IFTTT 支持 <a href="https://ifttt.com/maker_webhooks" target="_blank">Webhooks</a> ，而即刻支持 RSS 订阅源作为追踪对象，那我们只要在它们之间做一个 Webhooks 到 RSS 的转换，就可以把它们连接起来了</p>
    <h2>开始</h2>
    <p>就在你打开这个页面时，你已经得到了一个专属的地址：</p>
    <pre><code>{{ url }}</code></pre>
    <p>我们将使用它来配置 IFTTT 和 即刻（以『某人发了新 tweet 为例』）</p>
    <h3>配置 IFTTT</h3>
    <p>1. 在 IFTTT 创建新 Applet: <a href="https://ifttt.com/create" target="_blank">https://ifttt.com/create</a></p>
    <p>2. <strong class="thisthat">this </strong>处选择 Twitter</p>
    <p>3. trigger 选择 <strong>New tweet by a specific user</strong>，填入要监控的 Twitter id</p>
    <img src="/static/images/trigger.jpg" />
    <p>4. 进入 <strong class="thisthat">that</strong> 部分，搜索 <strong>webhook</strong> ，选择搜出来的 <strong>Maker Webhooks</strong></p>
    <img src="/static/images/search.jpg" />
    <p>5. 选择仅有的一个 action: <strong>Make a web request</strong></p>
    <p>6. 填入你的专属 URL</p>
    <pre><code>{{ url }}</code></pre>
    <p>Method 选择 POST，Content Type 选择 text/plain，结果如图：</p>
    <figure>
      <img src="/static/images/config.jpg" />
      <figcaption>URL 不一样是正常的</figcaption>
    </figure>
    <p>7: 配置 Body: Body 对应我们将在即刻看到的一条新消息内容，它分为两个部分：文本和链接。这个例子中，我们以推文作为文本部分，tweet 地址作为链接，在它们之间输入三个等号（ === ）作为分隔：</p>
    <figure>
      <img src="/static/images/body.gif" />
      <figcaption>注意3个等号哦</figcaption>
    </figure>
    <p>8. 点击 Create action，最后点击 Finish 结束 IFTTT 的配置</p>
    <h3>即刻创建新提醒</h3>
    <p>接下来，只要在即刻创建新提醒时，选择『RSS订阅源有更新』这个机器人，并填入你的专属 URL 就可以了！</p>
    <pre><code>{{ url }}</code></pre>
  </div>
  <a href="https://github.com/wong2/ifttj" target="_blank" class="github-corner" aria-label="View source on Github"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-49044498-6', 'auto');
  ga('send', 'pageview');
  </script>
</body>

</html>
